services:
  # Eureka Discovery Service
  eurekaservice:
    container_name: eurekaservice
    build:
      context: ./eureka
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - customers
      - cinemas
      - screenings
    expose:
      - "8761"
    restart: unless-stopped

  # Databases
  customersdb:
    container_name: customersdb
    image: postgres:latest
    environment:
      - POSTGRES_ROOT_PASSWORD=secret
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=user
      - POSTGRES_DB=usersdb
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - customers
    expose:
      - "5432"
    restart: unless-stopped

  paymentsdb:
    container_name: paymentsdb
    image: postgres:latest
    environment:
      - POSTGRES_ROOT_PASSWORD=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=paymentsdb
    volumes:
      - postgres:/data/postgres
    ports:
      - "5445:5432"
    expose:
      - "5445"
    networks:
      - payments
    restart: unless-stopped

  screeningsdb:
    container_name: screeningsdb
    image: postgres:latest
    environment:
      - POSTGRES_ROOT_PASSWORD=secret
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=user
      - POSTGRES_DB=screeningsdb
    volumes:
      - postgres:/data/postgres
    ports:
      - "5443:5432"
    expose:
      - "5443"
    networks:
      - screenings
    restart: unless-stopped

  reservationsdb:
    container_name: reservationsdb
    image: postgres:latest
    environment:
      - POSTGRES_ROOT_PASSWORD=secret
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=user
      - POSTGRES_DB=reservationsdb
    volumes:
      - postgres:/data/postgres
    ports:
      - "5444:5432"
    expose:
      - "5444"
    networks:
      - reservations
    restart: unless-stopped

  cinemasdb:
    container_name: cinemasdb
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_PASSWORD=secret
      - MYSQL_USER=user
      - MYSQL_DATABASE=cinemasdb
    ports:
        - "3306:3306"
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - cinemas
    expose:
        - "3306"
    restart: unless-stopped

  moviesdb:
    container_name: moviesdb
    image: postgres:latest
    environment:
      - POSTGRES_ROOT_PASSWORD=secret
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=user
      - POSTGRES_DB=moviesdb
    volumes:
      - postgres:/data/postgres
    ports:
      - "5453:5432"
    expose:
      - "5453"
    networks:
      - movies
    restart: unless-stopped

  # Database Management Tools
  mysqladmin:
    container_name: mysqladmin
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: cinemasdb
      PMA_PORT: 3306
      PMA_USER: user
      PMA_PASSWORD: secret
    ports:
      - "8001:80"
    networks:
      - cinemas
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - customers
      - screenings
      - movies
      - reservations
      - payments
    restart: unless-stopped

  # Apache Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    expose:
      - "9092"

networks:
  customers:
    driver: bridge
  cinemas:
    driver: bridge
  screenings:
    driver: bridge
  movies:
    driver: bridge
  reservations:
    driver: bridge
  payments:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mysql:
  vault: